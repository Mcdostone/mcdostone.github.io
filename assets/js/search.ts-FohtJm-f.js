const e={},t=["You're typing random shit, aren't you?","I can guess your cat is doing shit on your keyboard!","If you keep typing random shit, you could potentially mine crypto"];class n{constructor(e,t){this.searchDialog=t,this.input=this.searchDialog.querySelector("input"),this.NoResultsContainer=this.searchDialog.querySelector(".no-results-container"),this.data=e,this.iconsUrl=this.searchDialog.querySelector("label use").getAttribute("href").split("#")[0],this.template=document.createElement("template"),this.template.innerHTML='<li><a><svg><use href="/assets/images/icons.svg" /></svg><span class="title"></span><span class="description"></a></li>',this.results=this.searchDialog.querySelector(".results"),this.input.addEventListener("input",(e=>{const t=e.target.value.toLowerCase();this.results.innerHTML="",this.showResults(t)}))}search(e){const t=new RegExp(`${e}`,"gi");return this.data.filter((e=>t.test(e.title)||t.test(e.description)||t.test(e.text)))}isExternal(e){try{if(new URL(e).origin!==location.origin)return!0}catch{}return!1}showResults(e){if(e.length<=2)return void(this.NoResultsContainer.style.display="none");e=e.replaceAll(/[èéê]/gm,"e").replaceAll(/[àâ]/gm,"a");const n=this.search(e);for(const t of n){const e=this.template.content.cloneNode(!0),n=e.querySelector("a");n.href=t.url,this.isExternal(n.href)&&(n.target="_blank",n.rel="noopener noreferrer"),e.querySelector("use").setAttribute("href",`${this.iconsUrl}#${t.type}`),e.querySelector(".title").innerHTML=t.title,e.querySelector(".description").innerHTML=t.description,this.results.append(e),this.NoResultsContainer.style.display="none"}0==n.length&&(e.length>15?this.NoResultsContainer.querySelector("span").innerHTML.startsWith("No result found")&&(this.NoResultsContainer.querySelector("span").innerHTML=t[Math.floor(Math.random()*t.length)]):this.NoResultsContainer.querySelector("span").innerHTML=`No result found for '${e}'`,this.NoResultsContainer.style.display="")}}async function s(t,s){if(void 0===t){await function(t,n,s){let r=Promise.resolve();if(n&&n.length>0){document.getElementsByTagName("link");r=Promise.all(n.map((t=>{if((t="/"+t)in e)return;e[t]=!0;const n=t.endsWith(".css"),s=n?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${s}`))return;const r=document.createElement("link");return r.rel=n?"stylesheet":"modulepreload",n||(r.as="script",r.crossOrigin=""),r.href=t,document.head.appendChild(r),n?new Promise(((e,n)=>{r.addEventListener("load",e),r.addEventListener("error",(()=>n(new Error(`Unable to preload CSS for ${t}`))))})):void 0})))}return r.then((()=>Promise.resolve({}))).catch((e=>{const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=e,window.dispatchEvent(t),!t.defaultPrevented)throw e}))}(0,__vite__mapDeps([0]));const r=await fetch(s.dataset.endpoint).then((e=>e.json()));t=new n(r,s)}return t}let r;const i=document.querySelector("#search-dialog");i.addEventListener("click",(e=>{if(i.open){const t=e.target,n=t.getBoundingClientRect();!1==(n.top<=e.clientY&&e.clientY<=n.top+n.height&&n.left<=e.clientX&&e.clientX<=n.left+n.width)&&t.close()}})),document.addEventListener("keydown",(async function(e){(e.ctrlKey&&"k"===e.key||e.metaKey&&"k"===e.key)&&(e.preventDefault(),r=await s(r,i),i.open?i.close():i.showModal())})),document.querySelector("#search-button").addEventListener("click",(async function(){r=await s(r,i),i.open?i.close():i.showModal()})),window.addEventListener("visibilitychange",(()=>{i.close()}));
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["search-n_jBJW-e.css"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}