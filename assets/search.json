[{"url":"/articles/intro-3d-css/","title":"Introduction to 3D in CSS","type":"article","description":"This article is a modest introduction to 3D in CSS through an example. I share with you how I made a Minecraft creeper head in CSS and animated it with JavaScript.","text":"[./assets/face.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] H E L P !  This article is a modest introduction to 3D in CSS through an example. I share with you how I made a Minecraft creeper head in CSS and animated it with JavaScript. This article is composed of 2 parts:   1. Modeling a Minecraft creeper head.   2. Making the creeper alive.   MODELING THE CUBE  Modeling the creeper head is like modeling a cube. I use 2 assets:   * The face of the creeper, face.avif   * The side of his head, side.avif  [/articles/intro-3d-css/assets/face.webp]/articles/intro-3d-css/assets/face.webp[/articles/intro-3d-css/assets/side.webp]/articles/intro-3d-css/assets/side.webp  Each side of the cube is represented by an img tag and is nested in a div element. We need 6 images for the 6 square faces:  HTML  &lt;div class=&quot;creeper&quot;&gt;   &lt;img src=&quot;face.avif&quot; alt=&quot;&quot; class=&quot;side front&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side back&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side top&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side bottom&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side left&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side right&quot; /&gt; div&gt;   By default, HTML elements are positioned in a two-dimensional space, meaning that everything is flat.  [./assets/face.webp] Is it a menacing flat mouth or a hairy moustache?  transform-style [https://developer.mozilla.org/en-US/docs/Web/CSS/transform-style] is a CSS property indicating the way children elements are positioned in the space. With the keyword preserve-3d, we unlock the Z dimension and add some depth to the page. We can now position elements relative to the X, Y and Z axis. The CSS function translateZ [https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translateZ] position an element closer or farther away from the viewer:  CSS  .creeper {   --size: 128px;   --half-size: calc(var(--size) / 2);    margin: 0 auto;   width: var(--size);   height: var(--size);   /* 👇 Elements are now positioned in a 3D space */   transform-style: preserve-3d; }  .side {   position: absolute;   width: var(--size);   height: var(--size); }  .front {   transform: translateZ(var(--half-size)); } .back {   transform: translateZ(calc(var(--half-size) * -1)); } .top {   transform: translateY(calc(var(--half-size) * -1)) rotateX(90deg); } .left {   transform: translateX(calc(var(--half-size) * -1)) rotateY(90deg); } .bottom {   transform: translateY(var(--half-size)) rotateX(90deg); } .right {   transform: translateX(var(--half-size)) rotateY(90deg); }   The following figure can help you understand how the elements are positioned in the 3D space:  Hover me ✋ [./assets/face.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp]   BRINGING THE CUBE TO LIFE  This part is optional. The modeling is over, good job Jackson. [https://www.youtube.com/watch?v=HW7hN4NI4n0&amp;t=51s] The character looks very static though: I would like him to follow the cursor for more user interaction. To do so, we need to compute 2 angles. Once calculated, we can use rotateX [https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateX] and rotateY [https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateY] to position the cube relative to the axis of rotation X and Y. It has to be done in JavaScript:  [./assets/face.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] [./assets/side.webp] creeper.html  &lt;div class=&quot;creeper&quot; id=&quot;demo&quot;&gt;   &lt;img src=&quot;face.avif&quot; alt=&quot;&quot; class=&quot;side front&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side back&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side top&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side bottom&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side right&quot; /&gt;   &lt;img src=&quot;side.avif&quot; alt=&quot;&quot; class=&quot;side left&quot; /&gt; div&gt;   style.css  .creeper {   --size: 128px;   --half-size: calc(var(--size) / 2);    margin: 0 auto;   width: var(--size);   height: var(--size);   /* 👇 Elements are now positioned in a 3D space */   transform-style: preserve-3d;   /* Make the animation smoother */   transition: 0.05s transform ease-out;   transform: rotateX(var(--angle-x, 0deg)) rotateY(var(--angle-y, 0deg)); }  .side {   position: absolute;   width: var(--size);   height: var(--size); }  .front {   transform: translateZ(var(--half-size)); }  .back {   transform: translateZ(calc(var(--half-size) * -1)); }  .top {   transform: translateY(calc(var(--half-size) * -1)) rotateX(90deg); }  .left {   transform: translateX(calc(var(--half-size) * -1)) rotateY(90deg); }  .bottom {   transform: translateY(var(--half-size)) rotateX(90deg); }  .right {   transform: translateX(var(--half-size)) rotateY(90deg); }   app.ts  type Options = {   maxAngleX: number   maxAngleY: number }  const map = (value: number, low1: number, high1: number, low2: number, high2: number) =&gt; low2 + ((high2 - low2) * (value - low1)) / (high1 - low1)  function rotate(element: HTMLElement, angleX: number, angleY: number): void {   element.style.setProperty(&#39;--angle-x&#39;, `${angleX}deg`)   element.style.setProperty(&#39;--angle-y&#39;, `${angleY}deg`) }  function handleOrientation(element: HTMLElement, options: Options): void {   window.addEventListener(&#39;deviceorientation&#39;, (event: DeviceOrientationEvent) =&gt; {     const decY = map((event.gamma || 0) + 180, 0, 360, -options.maxAngleY, options.maxAngleY)     rotate(element, 0, -decY)   }) }  function handleCursor(element: HTMLElement, options: Options): void {   window.addEventListener(&#39;mousemove&#39;, (event: MouseEvent) =&gt; {     const elementRect = element.getBoundingClientRect()     const originX = elementRect.left + elementRect.width / 2     const originY = elementRect.top + elementRect.height / 2     const width = window.innerWidth     const height = window.innerHeight     const angleX = map(event.clientY - originY, -height / 2, height / 2, -options.maxAngleY, options.maxAngleY)     const angleY = map(event.clientX - originX, -width / 2, width / 2, -options.maxAngleX, options.maxAngleX)     rotate(element, -angleX, angleY)   }) }  const creeper = document.querySelector(&#39;#demo&#39;) as HTMLElement const options: Options = { maxAngleX: 40, maxAngleY: 20 } // For touch screens if (window.DeviceOrientationEvent &amp;&amp; &#39;ontouchstart&#39; in window) {   handleOrientation(creeper, Object.assign({}, options, { maxAngleY: 80 })) } else {   handleCursor(creeper, options) } "},{"url":"/articles/self-documented-makefile-v1-1/","title":"Self-Documented Makefile V1.1","type":"article","description":"A trick to print Makefile variables and their values.","text":"I like Makefiles: The syntax is quite simple, it&#39;s easy to use and it&#39;s useful to group commands in one place. In 2016, Marmelab published an article on documenting a Makefile [https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html]. With some shell script voodoo, you can run make help and it will print all the available targets and their descriptions. It works and it is simple. I&#39;ve been using this trick for years and I&#39;m happy with it.  Today I would like to go one step further: Let&#39;s improve the help target so it also outputs the variables and their values. To do so, we can read the internal database thanks to make -p. This command prints a lot of information: recipes, prerequisites, environment variables, variables and so on.  bash  make -pn hello=there # -n for a dry run # environment XAUTHORITY = /run/user/1000/gdm/Xauthority # environment GDMSESSION = ubuntu # environment XMODIFIERS = @im=ibus # makefile (from &#39;Makefile&#39;, line 3) NPROC := 12 # command line hello = there # ....   A quick lookup to the output later, I can extract the relevant information with the command, nothing fancy here:  bash  make -pn | awk &#39;/^# (makefile |command)/{getline; print}&#39;   Finally, let&#39;s format and print the result. Makefile looks like this:  Makefile  .DEFAULT_GOAL = help NPROC := $(shell nproc) HOST ?= 127.0.0.1  .PHONY: help  help: ## Show this help  @echo &quot;Variables:&quot;  @make -pnf $(MAKEFILE_LIST) | awk &#39;/^# (makefile |command)/{getline; print}&#39; | grep -v &quot;^MAKEFILE_LIST&quot; | sort | uniq | awk &#39;BEGIN {FS = &quot;:?= &quot;}; {printf &quot;  &#92;033[36m%-30s&#92;033[0m %s&#92;n&quot;, $$1, $$2}&#39;  @echo &quot;&#92;nTargets:&quot;  @grep -E &#39;^[/%a-zA-Z0-9_-]+: .*?## .*$$&#39; $(MAKEFILE_LIST) | sort | awk  &#39;BEGIN {FS = &quot;: .*?## &quot;}; {printf &quot;  &#92;033[36m%-30s&#92;033[0m %s&#92;n&quot;, $$1, $$2}&#39;   bash  make help hello=world Variables:   .DEFAULT_GOAL                  help   HOST                           127.0.0.1   NPROC                          8   hello                          world  Targets:   help                           Show this help "},{"url":"/articles/after-effects-date/","title":"Adobe After Effects and JavaScript","type":"article","description":"Adobe After Effects scripting has never been so easy.","text":"On January 1st 2021, I challenged myself: record 1 second of video every day for the entire 2021 year and compile them into a single film [https://www.youtube.com/watch?v=47ibFGy-w18&amp;t=35]. I really enjoyed achieving this idea: It felt great to make something a little creative since I&#39;m not at all, I could get familiar with my camera, I still love video editing and it was a perfect reason to say hello to my family/friends. Finally, it was even more exciting since I kept the challenge secret.  But enough storytelling, Let&#39;s get to the point of this article: Something I wanted for this video is the current date the video was taken. And of course, changing 365 times the text layer in my Adobe project was not part of the plan. So let&#39;s explore how to automate this tedious task in Adobe After Effects.   SCRIPTING IN ADOBE APPLICATIONS  When I was a student, I learned that Adobe applications come with a scripting language named ExtendScript. Even though the language was syntactically close to JavaScript, I didn&#39;t even try it. The reason? With the Studio crew [https://www.instagram.com/tncystudio/], we were very focused on investigating all the secrets of a light hoppy drink, with a drawing of the flying dutchman on the bottle.  Since October 2018, no more excuses: most Adobe applications embed a JavaScript engine (V8 or JavaScriptCore), which means we can write modern JS and use the latest features.   GENERATING THE DATE  It means I should be able to generate all the dates with a few lines of code. I would write something like this if my target was the browser&#39;s runtime:  TS  function generateDate(time = 0) {   const date = new Date(2021, 0, 1)   date.setDate(date.getDate() + Math.floor(time))   const options = { month: &#39;long&#39;, day: &#39;numeric&#39; }   return date.toLocaleDateString(&#39;en-US&#39;, options) // January 1 }     The rendering of the timeline is better on Firefox, I&#39;m just saying...  But here the code will run in the Adobe application, not a web browser. It means also that Adobe runtime exposes APIs and data [https://helpx.adobe.com/after-effects/using/expression-language-reference.html#global_objects_attributes_and_methods_expression_reference] to the program. One missing information here is the time variable. It must correspond to the current time of the composition. According to the documentation, time is a global variable representing the composition time, in seconds. That&#39;s exactly what I need:  JS  // &#39;time&#39; is a global variable const date = new Date(2021, 0, 1) const options = { month: &#39;long&#39;, day: &#39;numeric&#39; } date.setDate(date.getDate() + Math.floor(time)) date.toLocaleDateString(&#39;en-US&#39;, options)   Sorry, your browser doesn&#39;t support embedded videos.  &gt; Note for never: I wonder if we can import external libraries: imagine the &gt; limitless possibilities ahead of me if I can generate NFT videos with the &gt; library is-odd [https://www.npmjs.com/package/is-odd] or moment &gt; [https://momentjs.com/]...  I&#39;m glad I wasn&#39;t the robot on this task."},{"url":"/articles/cookies/","title":"A tool about cookies","type":"article","description":"A visual tool to understand cookie attributes and their outcomes.","text":"A few days before deploying my project in production, I ran into an issue on the preproduction application: I was not able to log into the back office even though my credentials were correct. Who is to blame? My code? The authentication service? The server? The compiler (why not)? What about you, Yann?!  The problem was the cookie: It was never sent because of two misconfigured attributes path and domain. So I decided to spend 8 hours making this tool to gain 2 minutes of RTFM the next time I have to deal with cookies.  &gt; This tool is for educational purposes. It&#39;s not battle-tested so don&#39;t use it &gt; to prove your cookies are secure. Ping me on Github &gt; [https://github.com/Mcdostone/mcdostone.github.io/issues/new?title=%5BTool%20for%20testing%20cookies%5D%20something%20is%20wrong&amp;body=hi] &gt; for issues.  "},{"url":"/articles/my-facebook-feed-is-a-nightmare/","title":"My facebook feed is a nightmare","type":"article","description":"A dream for those who like ads.","text":"I joined the social network in 2008. At this time, I was in middle school; people were sharing photos and posting comments. It was great. The content I received was the content I expected. The platform has always been a way to keep me informed about music, movies, local events, etc. For example, 2 days ago, I learned that Arctic Monkeys announced a new album.  Nowadays, I still use facebook because of messenger. Family and friends use it although I would rather use privacy-friendly apps such as Signal or Element (Matrix).  So why do I argue my feed is a nightmare? I take my phone out of my pocket, I open the facebook application and then, the funniest thing happens: [https://www.youtube.com/watch?v=1Rx_p3NW7gQ&amp;t=163s]  A post of the Ancient aliens Theory facebook group [./assets/1.jpg] 💩  We start with a group about alien theories.  Amazon Fresh facebook ad [./assets/2.jpg] 💩  An ad about Amazon Fresh. I don&#39;t like Amazon. I thought you already knew that Facebook.  Screenshot a blackscreen facebook video. [./assets/3.jpg] 💩  This guy sells a $400 ticket for a 3 days retreat to guide you in discovering your truest potential, purpose and power. He describes himself as an awakening guide. He sounds like a guru to me, what do you think Facebook?  Screenshot of a facebook video showing backseat of yellow Skoda Felicia Fun Pickup [./assets/4.jpg] 💩  A suggested video about a guy filming a yellow Skoda Felicia Fun Pickup. In the video, the guy has a baby voice.  Screenshot of a facebook post showing a guy making youtube videos [./assets/5.jpg] 💩  A suggested video of a guy making tech videos on Youtube. I&#39;m into tech so it could make sense but this is not tech I like at all.  Screenshot of a facebook post from Pepco about road closures [./assets/6.jpg] 💩  A sponsored post again? Did I break the Facebook algorithm or something?  Screenshot of a facebook video showing a bald guy wearing a headset [./assets/7.jpg]💩  What the heck? Who&#39;s that guy with this unbearable voice? Where did my friend&#39;s content go?  Screenshot of a gallery of facebook reels [./assets/8.jpg]💩  A gallery of videos from people I don&#39;t even know.  Video thumbnail: pet fishs, from $0.01 to $30,000 [./assets/9.jpg]💩  I&#39;m getting pissed off. Who is this guy again? And why does Facebook suggest these kinds of content?  Screenshot of a video showing a woman working on a laptop with a energy drink [./assets/10.jpg]💩  A summary of what I hate about marketing. This post considers people idiots.  A crappy meme about cars, old cars are viril, modern cars are compared to waxed people [./assets/11.jpg]💩  let&#39;s appreciate this misogynistic meme. Oh and by the way, I do not care about cars [https://www.reddit.com/r/fuckcars].  A NBA player roasting everyone according to the clickbait title [./assets/12.jpg]💩  It&#39;s the twelfth post on my timeline and still waiting for a friend&#39;s post. I don&#39;t even watch NBA.  A marvel meme from Black widow, it&#39;s about sex performances of different male actors [./assets/13.jpg]💩  Another meme about Marvel movies, no comment...  An ad of an electric flying insect trap device [./assets/14.jpg]💩  It&#39;s getting worse than TV ads at this rate...  An anonymised facebook post with a picture of a stone house [./assets/15.jpg]👍  First post I would possibly be interested in because I joined this facebook group 🎉. Are you trying to manipulate me Mark or am I paranoid?  A facebook post with a picture a cyclist near Big Ben in London [./assets/16.jpg]💩  An Australian shitposting group page talking about the UK??  Screnshot of a guy talking about influencers [./assets/17.jpg]💩  Money Driven Dream. That&#39;s so me Mark!  Ad of Wendy&#39;s [./assets/18.jpg]💩  According to a survey conducted by Choconews [https://chocorean.github.io/], 82% of American people think it&#39;s a great fast-food restaurant. Yann would tell you the contrary.  Screnshot of a Video with a woman [./assets/19.jpg]💩  Again, shitposting about people I don&#39;t even give attention to. What the fuck is wrong with Facebook?  Weird goodbyes album of The national feat. Bon Iver [./assets/20.jpg]👍  I need to check out what he&#39;s been working on these days.  anonymised friend&#39;s facebook post [./assets/21.jpg]👍  A post about a facebook page I follow, very surprising, I was expecting another suggested/sponsored content.  NEA today post [./assets/22.jpg]💩  I thought for a second the algorithm was working correctly, I almost had a panic attack...  Video of guy pouring champagn on cushions [./assets/23.jpg]💩  Shitposting video about a guy mad because people put some champagne on his $1000 cushions. What a sad life!  Little girl talking about Burning man [./assets/24.jpg]👍  I follow this person, he&#39;s a photographer.  anonymised friend&#39;s facebook post [./assets/25.jpg]💩    Sponsored facebook post of state farm showing a young man dancing in a backyard [./assets/26.jpg]💩  Are you trying to convince me your insurance company is lit? Let me doubt [https://www.nytimes.com/2022/03/18/business/state-farm-fraud-black-customers.html] about it.  Anonymised friend&#39;s facebook post [./assets/27.jpg]👍 A facebook marketplace post [./assets/28.jpg]👍  A friend selling furniture on facebook marketplace.  Anonymised friend&#39;s facebook post [./assets/29.jpg]👍  Are you still scrolling for real?  A sponsored facebook post about an alcohol drink [./assets/30.jpg]💩  I wonder whether minors could see this ad on their timeline.  Anonymised friend&#39;s facebook post [./assets/31.jpg]👍 Article from the Wall Street journal: If your Co-Workers are &#39;Quiet Quitting&#39;, Here&#39;s What That means [./assets/32.jpg]💩  What are you trying to tell me Mark?  A nurse dancing in front of her camera [./assets/33.jpg]💩  Until what? Until WHAT? TELL ME PLEASE, I WANNA KNOW!  A meme with characters from Kuzco about Mario [./assets/34.jpg]💩 Anonymised friend&#39;s facebook post [./assets/35.jpg]👍    Skull shaver, a company selling products for shaving [./assets/36.jpg]💩 Anonymised friend&#39;s facebook post [./assets/37.jpg]👍 Anonymised friend&#39;s facebook post [./assets/38.jpg]👍 Anonymised facebook marketplace post [./assets/39.jpg]👍    A modelo beer [./assets/40.jpg]💩  I don&#39;t drink this beer.  Video of Romain Lanéry [./assets/41.jpg]💩  The second time this guy is suggested. My position remains the same.  Video of a 2024 electric dodge challenger SRT [./assets/42.jpg]💩  I repeat myself one more time, I don&#39;t give a shit about cars.  Anonymised friend&#39;s facebook post [./assets/43.jpg]👍 Alchemical Records post about NFTs [./assets/44.jpg]💩  La cerise sur le gâteau: NFTs  Anonymised friend&#39;s facebook post [./assets/45.jpg]💩  I think it&#39;s enough for today.   WHY DOES IT LOOK SO BAD?  Have you noticed the crazy number of ads? How is it possible? Who on this planet could like so much shitty content seriously?  I have a simple theory: I think fewer and fewer people use facebook and prefer sharing content on Instagram. The fewer people using facebook, the more room for ads. This theory is the result of my observations, very unscientific though.   ANY SOLUTIONS?  2 years ago, I had already noticed more and more ads. Let&#39;s be honest a second: The ads are so bad and irrelevant most of the time but being confronted with them regularly is not without consequences. So I started reporting and hiding them:  facebook menu with 4 actions: save, hide or report a post [./assets/hide.jpg]  Unfortunately, as you can see, it has no impact, it&#39;s even worse I would say. A radical solution would be to get rid of facebook which also means getting rid of messenger, which is not an option for me at this time. Another solution is to disable your account. And good news: you can still use messenger even if your facebook account is disabled.   SUMMARY OF POSTS  Post Suggestion Sponsor Relevance Link #1 Ancient Aliens Theory ✓ ❌ Link [https://www.facebook.com/AncientAlientheoryaz/posts/pfbid024acK6wnSvd28Bcc3sT1tRTdNVbabtuRK7RGnbCw2Gqu3BnLtT87ubWXi4zp4xDiTl] #2 Amazon Fresh ✓ ❌ / #3 Dany Morel ✓ ❌ Link [https://www.facebook.com/Danny%20Morel/videos/1127425370991887/?fs=e&amp;s=m] #4 The Carz Pagevv ✓ ❌ Link [https://www.facebook.com/The%20Carz%20Page%20%EF%BF%BD/videos/3313799352231070/?fs=e&amp;s=m] #5 Romain Lanéry ✓ ❌ Link [https://www.facebook.com/watch/?v=584748862994058] #6 PepcoConnect ✓ ❌ Link [https://www.pepco.com/SmartEnergy/ReliabilityImprovements/Pages/CapitalGridProject.aspx] #7 entrepreneurauthority ✓ ❌ Link [https://www.facebook.com/Entrepreneur%20Authority/videos/1006975493175265/?fs=e&amp;s=m] #8 Random Reel videos ✓ ❌ / #9 Toopet ✓ ❌ Link [https://www.facebook.com/ToopetVideos/posts/pfbid0niQddus9MpjGGBMmJ4P41YxjK64hyy1LS4pcXemwFXB9sELx6iqe5vmj3XJitPRgl] #10 Optimum Nutrition ✓ ❌ Link [https://www.facebook.com/optimumnutrition/posts/pfbid0CsMTgK2X3Fx2QLAaNPG58ssJrK7DMh1sPZ7BfBWKVpwJgCsQyf2gnKC7Sh1sc3GKl] #11 Mecanicien actu ✓ ❌ Link [https://www.facebook.com/mecanicienactualite/posts/pfbid02YvzJbvfcRViqoDSuUMoYw8GVmesaGieGgT1G7o1x6rr4gfdY8M6sYBdB6e8hKcZVl] #12 nba_flames ✓ ❌ Link [https://www.facebook.com/Basketball%20%7C%20NBA%20%7C%20Sports%20%E2%9C%AA/videos/1191557371662149/?fs=e&amp;s=m] #13 Marvelous world of fiction ✓ ❌ Link [https://www.facebook.com/marvelousWOF/posts/pfbid02bMDRZPPLHtojBdKSVEBUMeMKXodPLUc2J1QQ7XN6pqJwa45cNRnF391JBoZRcXvil] #14 Zevo ✓ ❌ Link [https://www.facebook.com/Zevoinsect/posts/pfbid06pTij94eBv7Njf2WmGYXEAcD1taQB5QX2pxdLhCPJ1uoBFhhFJkhQJiYpzwEVov8l] #15 A facebook group I belong to ✓ / #16 LADBible Australia ✓ ❌ Link [https://www.facebook.com/LADbibleAustralia/posts/pfbid0oaCu29psVxZmYtLKz5kY1jiuJpuwXX2R7TwVdcQLpr8gd36m6kkbgjEaKMd9NXuSl] #17 Money Driven Dream ✓ ❌ Link [https://www.facebook.com/Money%20Driven%20Dream/videos/784752146021490/?fs=e&amp;s=m] #18 Wendy&#39;s ✓ ❌ Link [https://www.facebook.com/wendys/posts/pfbid02i9gLCn1agYsWNBmrVMQZ5ffxwktmNcpBpmvqbjguhWQKBz1FB8wFM9wbWgCV7aRbl] #29 Guillaume Pley ✓ ❌ Link [https://www.facebook.com/watch/?v=547600320130790] #20 Bon Iver ✓ Link [https://www.facebook.com/boniverwi/posts/pfbid02TJEGe8fKhuT1c4BzmNKHGb6bHqMC6jGBdtYnejHmoZYKteBdPfH2F8k3fM5fPLZdl] #21 A Facebook group about music ✓ / #22 NEA today ✓ ❌ Link [https://www.facebook.com/neatoday/posts/pfbid0ZUDnwhaiLKRAZWAJsjQVigki4YfNqHgjrMJ8QZNhp7ukfM3vNThteWmoXitNfYzZl] #23 nobodyspecial ✓ ❌ Link [https://www.facebook.com/Memes/videos/720039729313783/?fs=e&amp;s=m] #24 Trey RatCliff ✓ Link [https://www.facebook.com/watch/?v=3256721807944644&amp;extid=CL-UNK-UNK-UNK-AN_GK0T-GK1C&amp;ref=sharing] #25 A friend&#39;s post ✓ / #26 State Farm ✓ ❌ Link [https://www.facebook.com/statefarm/posts/pfbid0fJSmVMzjVWQ6rzwgd3fghiqgxydbPRabV8ZmrVWovNemVzQHkr4VaKceEzeFCDmkl] #27 Another friend&#39;s post ✓ / #28 A friend selling a furniture ✓ / #39 A post about a person I follow ✓ / #30 NÜTRL Vodka Seltzer ✓ ❌ Link [https://www.facebook.com/NUTRLus/posts/pfbid0339PbwHn25Ro1AUE1Qys8iB2SvKw9cu1zSnEUaXW6RirpBfVbjKzfBH4PvDiFAhkAl] #31 A post about sport news ✓ / #32 The Wall Street Journal ✓ ❌ Link [https://l.facebook.com/l.php?u=https%3A%2F%2Fon.wsj.com%2F3JR6xJ5&amp;h=AT3wTEZzmrpW-XtNquo61N54yKRJGb1jnBikhidAf3uVNg2ojTv8eqjZB_9Ee72v0UNSbKbjEZb-CFTPeVsfrTo7bUw1XYuEhq2UAEst0AfkrUYPwadEKCMJL94NaV6SJIb-ln4&amp;s=1] #33 frontelineboutique.co ✓ ❌ Link [https://www.facebook.com/Frontline%20Boutique/videos/602905277986364/?fs=e&amp;s=m] #34 Wonderful world of gaming ✓ ❌ Link [https://www.facebook.com/WonderfulWorldPokemon/posts/pfbid023qUUwY9B6gkgejv47bEbUNUJJs7FAqo9KHsvcbBy8qpUymq4bmPcziHtz2s3mn3El] #35 A friend has changed his profile picture ✓ / #36 Skull Shaver ✓ ❌ Link [https://www.facebook.com/SkullShaver/posts/pfbid0aXvcED1Nrv4MbEH9TJaGK7EMpBwVfKogMwemnnK16PWpGEFUPkgWX9KKyBCZP5uMl] #37 A friend sharing a post about summer activities ✓ / #38 Sport news again ✓ / #39 A friend selling furnitures ✓ / #40 Modelo ✓ ❌ Link [https://www.facebook.com/ModeloUSA/posts/pfbid062vN6dLd4Roa1YsUeR7uxHcRXFfqAGSpsTetLNTjcfFgYmFrACs5iaXfakLnbqMSl] #41 Romain Lanéry ✓ ❌ Link [https://www.facebook.com/watch/?v=5084900184949490] #42 Modded Detroit Car Shows ✓ ❌ Link [https://www.facebook.com/Modded%20Detroit%20Car%20Shows/videos/589696882858248/?fs=e&amp;s=m] #43 A friend sharing some pictures ✓ / #44 Alchemical Records ✓ ❌ Link [https://www.facebook.com/alchemicalrecords/videos/603491504553191/] #45 A friend sharing a post about soccer ✓ / Total 18 ✓ 12 ✓ 15 ✓"},{"url":"/articles/syntax-highlighter/","title":"My syntax highlighter","type":"article","description":"A lightweight build-time rendering Node.js syntax highlighter module based on Shiki.","text":"In this article, I&#39;m going to explain how I chose a syntax highlighting library for my blog and how I improved it because yes, I have very high expectations:   * The highlighting must be performed at build time. I use Eleventy    [https://www.11ty.dev/] as a static site generator.   * The output format must be HTML.   * A Node.js library is preferable since Eleventy requires it.   * The library must support at least the following programming languages: HTML,    CSS, JS, TS, Makefile, JSON, Golang, Ruby, C, Rust, and Java.   * Support of a dark theme is a plus.   * Embedding extra JS scripts is not a possibility: As you know, energy prices    are getting crazy. I bought a turtleneck sweater    [https://www.youtube.com/watch?v=D3lObmKSAU0] for my server but Github    doesn&#39;t want to give me physical access to my machine so let&#39;s save some    bytes.   * A concise and clean HTML output is appreciated.   CHOOSING A LIBRARY  I&#39;m not going to reinvent the wheel. Let&#39;s explore the different libraries available on the Internet [https://www.youtube.com/watch?v=uK4-nUZiOH4]:   * codemirror [https://codemirror.net/]: I use this library for the code    vizualiser of SARD [https://samate.nist.gov/SARD/]. This library is complete    but too overkilled for this blog. Furthermore, Codemirror is supposed to be    run in a browser.   * shjs [https://shjs.sourceforge.net/]: Not available on npm    [https://www.npmjs.com/], bye bye.   * rainbow [https://craig.is/making/rainbows]: Supported languages don&#39;t match    my needs.   * highlightjs [https://highlightjs.org/]: Highlight looks great. It&#39;s also very    well integrated with Eleventy.   * prism.js [https://prismjs.com/]: Another library for the browser.   * torchlight [https://torchlight.dev/]: There&#39;s no way I pay for highlighting    my shitty code.   * shiki [https://github.com/shikijs/shiki]: This one looks great too.  After comparing highlightjs and shiki, I decided to choose shiki because the colors look great and sharp (inspired by VScode themes) and it&#39;s a way for me to test the flexibility and modularity of Eleventy. Let&#39;s run Shiki for the first time to see what the output looks like:  HTML   &lt;pre class=&quot;shiki&quot;&gt;   &lt;code&gt;     &lt;span class=&quot;line&quot;&gt;       &lt;span style=&quot;color: #81A1C1&quot;&gt;constspan&gt;       &lt;span style=&quot;color: #D8DEE9FF&quot;&gt; span&gt;       &lt;span style=&quot;color: #D8DEE9&quot;&gt;shikispan&gt;       &lt;span style=&quot;color: #D8DEE9FF&quot;&gt; span&gt;       &lt;span style=&quot;color: #81A1C1&quot;&gt;=span&gt;       &lt;span style=&quot;color: #D8DEE9FF&quot;&gt; span&gt;       &lt;span style=&quot;color: #ECEFF4&quot;&gt;&#39;span&gt;       &lt;span style=&quot;color: #A3BE8C&quot;&gt;shikispan&gt;       &lt;span style=&quot;color: #ECEFF4&quot;&gt;&#39;span&gt;     span&gt;   code&gt; pre&gt;   Not too bad but few problems here:   * Colors are hardcoded, meaning there is no way to support different color    themes, especially the dark theme.   * The HTML output is verbose due to the style attribute of each token.   * A lot of colors are duplicated multiple times. For a small number of lines of    code, it&#39;s not a big deal but when it comes to sharing big chunks of code, it    increases the size of the HTML.  In my opinion, a better approach would look like this:  HTML    &lt;pre class=&quot;shiki&quot;&gt;   &lt;code&gt;     &lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;h1&quot;&gt;constspan&gt;       &lt;span class=&quot;h2&quot;&gt; span&gt;       &lt;span class=&quot;h3&quot;&gt;shikispan&gt;       &lt;span class=&quot;h2&quot;&gt; span&gt;       &lt;span class=&quot;h1&quot;&gt;=span&gt;       &lt;span class=&quot;h2&quot;&gt; span&gt;       &lt;span class=&quot;h4&quot;&gt;&#39;span&gt;       &lt;span class=&quot;h5&quot;&gt;shikispan&gt;       &lt;span class=&quot;h4&quot;&gt;&#39;span&gt;     span&gt;   code&gt; pre&gt;   &lt;style&gt;   .shiki {     --h1: #81a1c1;     --h2: #d8dee9ff;     /* ... */   }    @media (prefers-color-scheme: dark) {     .shiki {       --h1: #0550ae;       --h2: #a5d6ff;       /* ... */     }   }    .h1 {     color: var(--h1);   }   .h2 {     color: var(--h2);   }   /* ... */ style&gt;   There are a lot of benefits here:   * If I want to change the theme one day, I&#39;ll just need to update the CSS    files.   * I can define as many themes as I want by defining some extra CSS variables.   * The HTML is way cleaner than the default output.   ENHANCING SHIKI&#39;S OUTPUT  There&#39;s a special theme [https://github.com/shikijs/shiki/blob/main/docs/themes.md#theming-with-css-variables] css-variables that uses CSS variables instead of hardcoded values. Using this theme would allow me to support dark theme. After testing this feature, it turns out the result is not as great as choosing a normal theme like github-light. So I&#39;m going to bake some homemade code.  Shiki&#39;s API is well-designed. It exposes 2 functions: codeToHtml [https://github.com/shikijs/shiki/blob/main/packages/shiki/src/highlighter.ts#LL130C18-L130C18] which returns the HTML output from a string of code and codeToThemedTokens [https://github.com/shikijs/shiki/blob/main/packages/shiki/src/highlighter.ts#LL115C12-L115C18] which returns an intermediate representation of the highlighted code. I&#39;m going to use codeToThemedTokens so I can have control over the HTML rendering. The function returns an object of type IThemedToken[][] [https://github.com/shikijs/shiki/blob/main/packages/shiki/src/themedTokenizer.ts#L72], the first dimension is for the lines and the second dimension is for the different tokens, nothing fancy here.   * highlight.ts is the main module. the function highlight will be used in    Eleventy.   * generate-theme.ts is a program that must be run once to generate the CSS    rules and theme-mapping.json.   * theme-mapping.json maps an HTML class with a color of a theme (here    github-light.json    [https://github.com/shikijs/shiki/blob/main/packages/shiki/themes/github-light.json]).  highlight.ts  import { encode } from &#39;html-entities&#39; import { Highlighter, IThemedToken } from &#39;shiki&#39;  // eslint-disable-next-line @typescript-eslint/no-var-requires, unicorn/prefer-module const mapping = require(&#39;./theme-mapping.json&#39;)  class Highlight {   constructor(private readonly h: Highlighter) {}    /**    * Highlight code with colors.    * @param {string} code    * @param {string} language    * @returns {string} HTML content    */   highlight(code: string, language: string): string {     // eslint-disable-next-line @typescript-eslint/no-non-null-assertion     const tokens = this.h.codeToThemedTokens(code, language)     return this.renderToHTML(tokens)   }    /**    * Build the HTML output from tokens, https://github.com/shikijs/shiki/blob/main/packages/shiki/src/renderer.ts#L24https://github.com/shikijs/shiki/blob/main/packages/shiki/src/renderer.ts#L24    * @param tokens tokens from the shiki library, see `codeToThemedTokens`    * @returns {string} HTML content    */   renderToHTML(tokens: IThemedToken[][]): string {     // eslint-disable-next-line @typescript-eslint/no-non-null-assertion     const theme = this.h.getTheme()      let html = &#39;&#39;     for (const line of tokens) {       html += ``       for (const token of line) {         const className = token.color ? mapping[token.color.toUpperCase()] : theme.fg         html += this.generateSpanTag(token, className)       }       html += `&#92;n`     }     return html.trimEnd()   }    generateSpanTag(token: IThemedToken, className) {     if (!token.content.trim()) {       return `${this.processToken(token)}`     }     return `className}&quot;&gt;${this.processToken(token)}`   }    processToken(token: IThemedToken) {     /*const t = encode(token.content)     const HTTP_URL = /(https?:&#92;/&#92;/&#92;S+)/g     return t.replaceAll(HTTP_URL, &#39;$1$1&#39;) */     const HTTP_URL = /(https?:&#92;/&#92;/.[&#92;w#%+.:=@~-]{2,256}&#92;.[a-z]{2,6}&#92;b[&#92;w#%&amp;+./:=?@~-]*)/g     const t = token.content.match(HTTP_URL)     if (t) {       return token.content.replaceAll(t[0], `t${&lt;/span&gt;&lt;span class=[0]}&quot;&gt;${encode(t[0])}`)     }     return encode(token.content)   } }  export { Highlight }   generate-theme.ts  import { promises as fs } from &#39;node:fs&#39; import path from &#39;node:path&#39; import { loadTheme } from &#39;shiki&#39;  interface Colors {   light: string   dark: string }  // https://github.com/shikijs/shiki/tree/main/packages/shiki/themeshttps://github.com/shikijs/shiki/tree/main/packages/shiki/themes const DEFAULT_THEME = &#39;github&#39;  function generateClass(index) {   return `h${String(index).padStart(2, &#39;0&#39;)}` }  function generateCSS(colors: Array&lt;Colors&gt;) {   let cssOutput = &#39;&#39;   const variables = colors.map((colors, index) =&gt; `    --${generateClass(index)}: ${colors.light};`)   const darkVariables = colors.map((colors, index) =&gt; `    --${generateClass(index)}: ${colors.dark};`)   for (let index = 0; index &lt; colors.length; index++) {     const paddedIndex = generateClass(index)     cssOutput = `${cssOutput}.${paddedIndex} { color: var(--${paddedIndex}) }&#92;n`   }   return `.code-block-inner { ${variables.join(&#39;&#92;n&#39;)} }  #dark .code-block-inner { ${darkVariables.join(&#39;&#92;n&#39;)} }  ${cssOutput}` }  function generateMappingFile(colors: Array&lt;Colors&gt;) {   const mapping = new Map&lt;string, string&gt;()   for (const [index, color] of colors.entries()) {     mapping.set(color.light.toUpperCase(), generateClass(index))   }   // eslint-disable-next-line unicorn/prefer-module   return fs.writeFile(path.join(__dirname, &#39;theme-mapping.json&#39;), JSON.stringify(Object.fromEntries(mapping), undefined, 2)) }  async function main(themeName: string) {   const colors = new Map&lt;string, string&gt;()   const theme = await loadTheme(`themes/${themeName}-light.json`).then((t) =&gt; t.settings)   const darkTheme = await loadTheme(`themes/${themeName}-dark.json`).then((t) =&gt; t.settings)   for (const index in theme) {     const key = theme[index].settings.foreground || undefined     if (key) {       if (colors.get(key) === darkTheme[index].settings.foreground) {         console.error(`Color ${key} already used for ${theme[index].scope}`)         continue       }       // eslint-disable-next-line @typescript-eslint/no-non-null-assertion       colors.set(key, darkTheme[index].settings.foreground!)     }   }    const sortedColors = [...colors]     .map(([light, dark]) =&gt; ({ light, dark }))     .sort((a, b) =&gt; {       return a.light.localeCompare(b.dark)     })    await generateMappingFile(sortedColors)   console.log(generateCSS(sortedColors)) }  // node_modules/.bin/ts-node modules/eleventy/generate-theme.ts // eslint-disable-next-line unicorn/prefer-top-level-await main(process.argv[2] || DEFAULT_THEME).catch(console.error)   theme-mapping.json  {   &quot;#032F62&quot;: &quot;h00&quot;,   &quot;#22863A&quot;: &quot;h01&quot;,   &quot;#6F42C1&quot;: &quot;h02&quot;,   &quot;#005CC5&quot;: &quot;h03&quot;,   &quot;#6A737D&quot;: &quot;h04&quot;,   &quot;#F6F8FA&quot;: &quot;h05&quot;,   &quot;#586069&quot;: &quot;h06&quot;,   &quot;#B31D28&quot;: &quot;h07&quot;,   &quot;#E36209&quot;: &quot;h08&quot;,   &quot;#D73A49&quot;: &quot;h09&quot;,   &quot;#24292E&quot;: &quot;h10&quot;,   &quot;#FAFBFC&quot;: &quot;h11&quot; }   output.html  &lt;span&gt;   &lt;span class=&quot;h11&quot;&gt;constspan&gt;   &lt;span&gt; span&gt;   &lt;span class=&quot;h03&quot;&gt;shikispan&gt;   &lt;span&gt; span&gt;   &lt;span class=&quot;h11&quot;&gt;=span&gt;   &lt;span&gt; span&gt;   &lt;span class=&quot;h05&quot;&gt;requirespan&gt;   &lt;span class=&quot;h08&quot;&gt;(span&gt;   &lt;span class=&quot;h01&quot;&gt;&#39;shiki&#39;span&gt;   &lt;span class=&quot;h08&quot;&gt;)span&gt; span&gt; "},{"url":"/articles/first-time-arch-linux/","title":"My Arch Linux install","type":"article","description":"Just some voodoo bash scripts to install Arch Linux from scratch.","text":"This article is a guide for myself: I spent hours writing bash scripts to install Arch Linux on my machine from scratch. There is room for improvement but right now I&#39;m happy with this setup.   GETTING STARTED  Create a Arch Linux Installer USB drive:  bash  # Download the ISO curl -L &quot;https://geo.mirror.pkgbuild.com/iso/latest/archlinux-x86_64.isohttps://geo.mirror.pkgbuild.com/iso/latest/archlinux-x86_64.iso&quot; -O  # Format and copy the iso on the thumb drive wipefs --all /dev/sdx cp ./archlinux-x86_64.iso /dev/sdx  reboot   Once Arch Linux is booted:  bash  # Boot a Arch Linux live USB then run the command: mkdir scripts cd scripts  export SSID=&quot;your-ssid&quot; export WIFI_PASSPHRASE=&quot;your-wifi-passphrase&quot; iwctl station wlan0 connect &quot;$SSID&quot; --passphrase &quot;$WIFI_PASSPHRASE&quot; curl -L https://mcdostone.github.io/install-arch-linuxhttps://mcdostone.github.io/install-arch-linux | bash  # Configure the environment variables cat .env  # And install Arch Linux bash init.sh    * init.sh [./assets/init.sh]: The entrypoint script.   * chroot.sh [./assets/chroot.sh]: Script executed when arch-chroot    [https://wiki.archlinux.org/title/chroot#Using_arch-chroot].   * startup.sh [./assets/startup.sh]: The script to run after the reboot, once    Arch Linux is installed.   PARTITIONNING  I use ext4 [https://wiki.archlinux.org/title/Ext4] as a file system. Maybe there are better solutions these days. I allocate 1GB for the boot partition to test custom linux kernels.  /dev/sda1 1GBBoot /dev/sda2 4GBSwap /dev/sda3 114GBRoot   TERMINAL AND SHELL  I have a preference for fish Shell [https://fishshell.com/], the autosuggestion feature is the only reason I chose it. I use Gnome terminal [https://help.gnome.org/users/gnome-terminal/stable/].   * I use oh-my-fish [https://github.com/oh-my-fish/oh-my-fish] to install    themes.   * I like the colors palette of the Agnoster theme    [https://github.com/oh-my-fish/theme-agnoster].   * I use the SF Pro Display and SF Mono fonts    [https://aur.archlinux.org/packages/apple-fonts].  A screenshot of what my DE looks like [./assets/screenshot-4.png]./assets/screenshot-4.png   DESKTOP ENVIRONMENT  I use Gnome 44 with a bunch of extensions. The theme is Colloid-gtk [https://github.com/vinceliuice/Colloid-gtk-theme], the icons pack is WhiteSur-icon [https://github.com/vinceliuice/WhiteSur-icon-theme.git].  Extension Description user-theme@gnome-shell-extensions.gcampax.github.com [https://extensions.gnome.org/extension/19/user-themes/] Should be in GNOME just-perfection-desktop@just-perfection [https://extensions.gnome.org/extension/3843/just-perfection/] Add blur in GNOME shell search-light@icedman.github.com [https://extensions.gnome.org/extension/5489/search-light/] Take the apps search out of overview rounded-window-corners@yilozt [https://extensions.gnome.org/extension/5237/rounded-window-corners/] Add rounded corners for all windows nightthemeswitcher@romainvigier.fr [https://extensions.gnome.org/extension/2236/night-theme-switcher/] Toggle between light and dark theme automatically blur-my-shell@aunetx [https://extensions.gnome.org/extension/3193/blur-my-shell/] Add blur in GNOME shell dash-to-dock@micxgx.gmail.com [https://extensions.gnome.org/extension/307/dash-to-dock/] A dock for the Gnome Shell noannoyance@daase.net [https://extensions.gnome.org/extension/2182/noannoyance/] Remove the &#39;Window is ready&#39; notification remove-alt-tab-delay@daase.net [https://extensions.gnome.org/extension/2741/remove-alttab-delay-v2/] Remove the 0.15 second popup delay in switcher pop-ups windowIsReady_Remover@nunofarruca@gmail.com [https://extensions.gnome.org/extension/1007/window-is-ready-notification-remover/] Removes window is ready Notification   APPLICATIONS  Most of the applications below are installed with flatpak [https://flatpak.org/].   * Icon of VLC [./assets/icon-vlc.svg]https://www.videolan.org/vlc/  * Icon of Firefox developer edition    [./assets/icon-firefox-dev.svg]https://www.mozilla.org/en-US/firefox/developer/  * Icon of Fish shell [./assets/icon-fish.png]https://fishshell.com/  * Icon of Spotify [./assets/icon-spotify.svg]https://spotify.com/  * Icon of Signal [./assets/icon-signal.svg]https://signal.org/  * Icon of Discord [./assets/icon-discord.svg]https://discord.com  * Icon of intellij IDEA    [./assets/icon-intellij.svg]https://www.jetbrains.com/idea/  * Icon of VScode [./assets/icon-vscode.svg]https://code.visualstudio.com/   SCREENSHOTS  A screenshot of what my DE looks like [./assets/screenshot-1.png]./assets/screenshot-1.pngA screenshot of what my DE looks like [./assets/screenshot-2.png]./assets/screenshot-2.pngA screenshot of what my DE looks like [./assets/screenshot-3.png]./assets/screenshot-3.png  Next step is to compile the Linux Kernel with a configuration dedicated to my laptop."},{"url":"/recipes/butternut-goat-cheese-lasagna/","title":"Lasagnes de butternut et fromage de chèvre","type":"recipe","description":"Lasagnes de butternut et fromage de chèvre","text":"LES INGRÉDIENTS  Pour personnes   * Courge butternut        1 Courges butternut   * Feuilles de lasagnes        1 paquets   * Oignon        1 oignons   * Ail        2 gousses   * Concassé de tomates        500g   * Bûche de fromage de chèvre        1 bûches   * Fromage de chèvre frais        100g   * Gruyère râpé        100g   * Huile d&#39;olive        1 filets   * Paprika        1 cuillères à café   * Cumin moulu        1 cuillères à café   * Beurre        50g   * Farine        50g   * Lait        70cl   * Sel   * Poivre   LA RECETTE  Une photo est prévue lorsque j&#39;aurai cuisiné cette pépite.  1. Pelez et égrainez la courge butternut. Coupez-la en dés et disposez-les sur une grille recouverte de papier cuisson. Parsemez de paprika et de cumin, puis enfournez à 180°C pendant 30 minutes.  2. Pelez et émincez l&#39;oignon et les gousses d&#39;ails faites-les revenir dans une poêle chaude avec un filet d&#39;huile d&#39;olive jusqu&#39;à ce qu&#39;ils colorent. Ajoutez-le concassé de tomates et laissez mijoter sur feux doux pondant 10 minutes.  3. Incorporez le chèvre frais et la moitié de la bûche coupée à la préparation puis ajoutez les dés de courge et mélangez.  4. Pour la béchamel, faites fondre le beurre à feu moyen dans une casserole puis ajoutez la farine en remuant rapidement. Versez progressivemnt le lait tout en remuant jusqu&#39;à ce que le mélange épaississe et assaisonnez à votre convenance. Réservez.  5. Beurrez un plat à gratin puis montez vos lasagnes. Étalez une fine couche de béchamel puis recouvrez de feuilles de lasagne. Versez la moitié de la sauce à la courge puis une couche de béchamel. Recouvrez de feuilles de lasagne et continuez d&#39;amener et finissant par des feuilles de lasagnes recouvertes de béchamel, de rondelles de bûche de chèvre et de gruyère râpé.  6. Enfournez 30 minutes à 180°C. Servez chaud."},{"url":"/recipes/vegetarian-savoury-cake/","title":"Cake salé végétarien","type":"recipe","description":"Cake salé végétarien aux poivrons, olives et féta","text":"LES INGRÉDIENTS  Pour personnes   * Oeuf        3oeufs   * Farine        150g   * Levure chimique        1 sachets   * Huile d&#39;olive        8cl   * Lait        12.5cl   * Gruyère râpé        100g   * Poivron rouge        1poivrons   * Feta        150g   * Olives noire        50g   * Poivre   LA RECETTE  Un moule de 28cm est nécéssaire.  1. Faites griller les poivrons à la poêle ou au four.  2. Coupez la féta en dés et ajoutez-y les olives coupées en rondelles. Réservez. Dans un saladier, fouettez les oeufs, la farine, la levure et le poivre. Incorporez petit à petit le lait et l’huile légèrement tièdi au micro-onde. Ajoutez le gruyère. Mélangez. Incorporez ensuite le mélange poivrons-féta-olives à la pâte et remuez.  3. Transvasez le tout dans le moule beurré, saupoudrez d’un peu d’origan et faites cuire pendant 45 minutes."},{"url":"https://12factor.net/","title":"A must-read guide for developers.","type":"external-link","description":"https://12factor.net/","text":"https://12factor.net/"},{"url":"https://www.youtube.com/watch?v=um9zUJfoxQs","title":"How semantic versioning can help you release software.","type":"external-link","description":"https://www.youtube.com/watch?v=um9zUJfoxQs","text":"https://www.youtube.com/watch?v=um9zUJfoxQs"},{"url":"https://fffuel.co/","title":"A toolbox for frontend designers.","type":"external-link","description":"https://fffuel.co/","text":"https://fffuel.co/"},{"url":"https://vectorizer.ai/","title":"Convert your JPEG and PNG bitmaps to SVG vectors quickly and easily.","type":"external-link","description":"https://vectorizer.ai/","text":"https://vectorizer.ai/"},{"url":"https://emilkowal.ski/ui/dynamic-island","title":"Dynamic island made with CSS.","type":"external-link","description":"https://emilkowal.ski/ui/dynamic-island","text":"https://emilkowal.ski/ui/dynamic-island"},{"url":"https://samwho.dev/load-balancing/","title":"An article illustrating different load balancing strategies.","type":"external-link","description":"https://samwho.dev/load-balancing/","text":"https://samwho.dev/load-balancing/"},{"url":"https://clig.dev/","title":"Command Line Interface Guidelines.","type":"external-link","description":"https://clig.dev/","text":"https://clig.dev/"},{"url":"https://blog.clement.delafargue.name/posts/2015-05-20-why-auto-increment-is-a-terrible-idea.html","title":"Why auto increment is a terrible idea.","type":"external-link","description":"https://blog.clement.delafargue.name/posts/2015-05-20-why-auto-increment-is-a-terrible-idea.html","text":"https://blog.clement.delafargue.name/posts/2015-05-20-why-auto-increment-is-a-terrible-idea.html"}]