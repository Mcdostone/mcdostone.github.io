[{
    "url" : "/articles/intro-3d-css/",
    "title" : "Introduction to 3D in CSS",
    "type" : "article",
    "description" : "This article is a modest introduction to 3D in CSS through an example. I share with you how I made a Minecraft creeper head in CSS and animated it with JavaScript.",
    "text" : "article modest introduction CSS example share made Minecraft creeper head CSS animated JavaScript article composed parts Modeling Minecraft creeper head Making creeper alive Modeling cube Modeling creeper head modeling cube use assets face creeper face avif side head side avif side cube represented img tag nested div element need images square faces HTML div class creeper img src face avif alt class side front img src side avif alt class side back img src side avif alt class side top img src side avif alt class side bottom img src side avif alt class side left img src side avif alt class side right div default HTML elements positioned two dimensional space meaning everything flat menacing flat mouth hairy moustache transform style CSS property indicating children elements positioned space keyword preserve unlock dimension add depth page position elements relative axis CSS function translateZ position element closer farther away viewer CSS creeper size 128px half size calc var size margin auto width var size height var size Elements positioned space transform style preserve side position absolute width var size height var size front transform translateZ var half size back transform translateZ calc var half size top transform translateY calc var half size rotateX 90deg left transform translateX calc var half size rotateY 90deg bottom transform translateY var half size rotateX 90deg right transform translateX var half size rotateY 90deg following figure help understand elements positioned space Hover Bringing cube life part optional modeling good job Jackson character looks static though follow cursor user interaction need compute angles Once calculated use rotateX rotateY position cube relative axis rotation done JavaScript creeper html div class creeper demo img src face avif alt class side front img src side avif alt class side back img src side avif alt class side top img src side avif alt class side bottom img src side avif alt class side right img src side avif alt class side left div style css creeper size 128px half size calc var size margin auto width var size height var size Elements positioned space transform style preserve animation smoother transition 05s transform ease transform rotateX var angle 0deg rotateY var angle 0deg side position absolute width var size height var size front transform translateZ var half size back transform translateZ calc var half size top transform translateY calc var half size rotateX 90deg left transform translateX calc var half size rotateY 90deg bottom transform translateY var half size rotateX 90deg right transform translateX var half size rotateY 90deg app type Options maxAngleX number maxAngleY number const map value number low1 number high1 number low2 number high2 number low2 high2 low2 value low1 high1 low1 function rotate element HTMLElement angleX number angleY number void element style setProperty angle angleX deg element style setProperty angle angleY deg function handleOrientation element HTMLElement options Options void window addEventListener deviceorientation event DeviceOrientationEvent const decY map event gamma 180 360 options maxAngleY options maxAngleY rotate element decY function handleCursor element HTMLElement options Options void window addEventListener mousemove event MouseEvent const elementRect element getBoundingClientRect const originX elementRect left elementRect width const originY elementRect top elementRect height const width window innerWidth const height window innerHeight const angleX map event clientY originY height height options maxAngleY options maxAngleY const angleY map event clientX originX width width options maxAngleX options maxAngleX rotate element angleX angleY const creeper document querySelector demo HTMLElement const options Options maxAngleX maxAngleY touch screens window DeviceOrientationEvent ontouchstart window handleOrientation creeper Object assign options maxAngleY else handleCursor creeper options const map function rotate style setProperty angle deg style setProperty angle deg function handleOrientation window addEventListener deviceorientation const map gamma 180 360 maxAngleY maxAngleY rotate function handleCursor window addEventListener mousemove const getBoundingClientRect left width top height window innerWidth window innerHeight map clientY maxAngleY maxAngleY map clientX maxAngleX maxAngleX rotate const creeper document querySelector demo options maxAngleX maxAngleY window DeviceOrientationEvent ontouchstart window handleOrientation creeper Object assign options maxAngleY handleCursor creeper options"
  },{
    "url" : "/articles/self-documented-makefile-v1-1/",
    "title" : "Self-Documented Makefile V1.1",
    "type" : "article",
    "description" : "A trick to print Makefile variables and their values.",
    "text" : "Makefiles syntax quite simple easy use useful group commands one place 2016 Marmelab published article documenting Makefile shell script voodoo run help will print available targets descriptions works simple using trick years happy Today one step further Let improve help target outputs variables values read internal database thanks command prints lot information recipes prerequisites environment variables variables bashmake hello dry run environment XAUTHORITY run user 1000 gdm Xauthority environment GDMSESSION ubuntu environment XMODIFIERS ibus makefile Makefile line NPROC command line hello quick lookup output later extract relevant information command nothing fancy bashmake awk makefile command getline print Finally let format print result Makefile looks Makefile DEFAULT_GOAL help NPROC shell nproc HOST 127 PHONY help help Show help echo Variables pnf MAKEFILE_LIST awk makefile command getline print grep MAKEFILE_LIST sort uniq awk BEGIN printf 033 36m 30s 033 echo nTargets grep MAKEFILE_LIST sort awk BEGIN printf 033 36m 30s 033 bashmake help hello world Variables DEFAULT_GOAL help HOST 127 NPROC hello world Targets help Show help"
  },{
    "url" : "/articles/after-effects-date/",
    "title" : "Adobe After Effects and JavaScript",
    "type" : "article",
    "description" : "Adobe After Effects scripting has never been so easy.",
    "text" : "January 1st 2021 challenged myself record second video every day entire 2021 year compile single film really enjoyed achieving idea felt great something little creative not familiar camera love video editing perfect reason say hello family friends Finally even exciting kept challenge secret enough storytelling Let point article Something wanted video current date video taken course changing 365 times text layer Adobe project not part plan let explore automate tedious task Adobe Effects Scripting Adobe applications When student learned Adobe applications scripting language named ExtendScript Even though language syntactically close JavaScript didn even try reason Studio crew focused investigating secrets light hoppy drink drawing flying dutchman bottle October 2018 excuses Adobe applications embed JavaScript engine JavaScriptCore means write modern use latest features Generating date means able generate dates few lines code write something target browser runtime TSfunction generateDate time const date new Date 2021 date setDate date getDate Math floor time const options month long day numeric return date toLocaleDateString options January rendering timeline better Firefox just saying code will run Adobe application not web browser means Adobe runtime exposes APIs data program One missing information time variable correspond current time composition According documentation time global variable representing composition time seconds exactly need time global variable const date new Date 2021 const options month long day numeric date setDate date getDate Math floor time date toLocaleDateString options Sorry browser doesn support embedded videos function getDate const new Date 2021 setDate getDate Math floor return toLocaleDateString month long day numeric const date document querySelector viewer date cursor document querySelector timeline date innerHTML getDate cursor value cursor addEventListener input const target date innerHTML getDate value Note wonder import external libraries imagine limitless possibilities ahead generate NFT videos library odd moment glad wasn robot task"
  },{
    "url" : "/articles/cookies/",
    "title" : "A tool about cookies",
    "type" : "article",
    "description" : "A visual tool to understand cookie attributes and their outcomes.",
    "text" : "few days deploying project production ran issue preproduction application not able log back office even though credentials correct blame code authentication service server compiler why not Yann problem cookie sent two misconfigured attributes path domain decided spend hours making tool gain minutes RTFM next time deal cookies tool educational purposes not battle tested don use prove cookies secure Ping Github issues"
  },{
    "url" : "/articles/my-facebook-feed-is-a-nightmare/",
    "title" : "My facebook feed is a nightmare",
    "type" : "article",
    "description" : "A dream for those who like ads.",
    "text" : "joined social network 2008 time middle school people sharing photos posting comments great content received content expected platform always keep informed music movies local events etc example days ago learned Arctic Monkeys announced new album Nowadays use facebook messenger Family friends use although rather use privacy friendly apps Signal Element Matrix why argue feed nightmare phone pocket open facebook application funniest thing happens start group alien theories Amazon Fresh don Amazon thought already knew Facebook guy sells 400 ticket days retreat guide discovering truest potential purpose power describes awakening guide sounds guru think Facebook suggested video guy filming yellow Skoda Felicia Fun Pickup video guy baby voice suggested video guy making tech videos Youtube tech sense not tech sponsored post again break Facebook algorithm something heck guy unbearable voice friend content gallery videos people don even know getting pissed off guy again why does Facebook suggest kinds content summary hate marketing post considers people idiots let appreciate misogynistic meme not care cars twelfth post timeline waiting friend post don even watch NBA meme Marvel movies comment getting worse ads rate First post possibly interested joined facebook group trying manipulate Mark paranoid Australian shitposting group page talking Money Driven Dream Mark According survey conducted Choconews American people think great fast food restaurant Yann tell contrary Again shitposting people don even give attention fuck wrong Facebook need check working days post facebook page follow surprising expecting suggested sponsored content thought second algorithm working correctly almost panic attack Shitposting video guy mad people put champagne 1000 cushions sad life follow person photographer trying convince insurance company lit Let doubt friend selling furniture facebook marketplace scrolling real wonder whether minors see timeline trying tell Mark Until Until TELL PLEASE WANNA KNOW don drink beer second time guy suggested position remains repeat myself one time don give shit cars cerise sur gateau NFTs think enough today Why does look bad noticed crazy number ads possible planet shitty content seriously simple theory think fewer fewer people use facebook prefer sharing content Instagram fewer people using facebook room ads theory result observations unscientific though solutions years ago already noticed ads Let honest second ads bad irrelevant time confronted regularly not without consequences started reporting hiding Unfortunately see impact even worse say radical solution rid facebook means getting rid messenger not option time solution disable account good news use messenger even facebook account disabled Summary posts Post Suggestion Sponsor Relevance Link Ancient Aliens Theory Link Amazon Fresh Dany Morel Link Carz Pagevv Link Romain Lanery Link PepcoConnect Link entrepreneurauthority Link Random Reel videos Toopet Link Optimum Nutrition Link Mecanicien actu Link nba_flames Link Marvelous world fiction Link Zevo Link facebook group belong LADBible Australia Link Money Driven Dream Link Wendy Link Guillaume Pley Link Bon Iver Link Facebook group music NEA today Link nobodyspecial Link Trey RatCliff Link friend post State Farm Link friend post friend selling furniture post person follow NUTRL Vodka Seltzer Link post sport news Wall Street Journal Link frontelineboutique Link Wonderful world gaming Link friend changed profile picture Skull Shaver Link friend sharing post summer activities Sport news again friend selling furnitures Modelo Link Romain Lanery Link Modded Detroit Car Shows Link friend sharing pictures Alchemical Records Link friend sharing post soccer Total"
  },{
    "url" : "/articles/syntax-highlighter/",
    "title" : "My syntax highlighter",
    "type" : "article",
    "description" : "A lightweight build-time rendering Node.js syntax highlighter module based on Shiki.",
    "text" : "article going explain chose syntax highlighting library blog improved yes high expectations highlighting performed build time use Eleventy static site generator output format HTML Node library preferable Eleventy requires library support least following programming languages HTML CSS Makefile JSON Golang Ruby Rust Java Support dark theme plus Embedding extra scripts not possibility know energy prices getting crazy bought turtleneck sweater server Github doesn want give physical access machine let save bytes concise clean HTML output appreciated Choosing library not going reinvent wheel Let explore different libraries available Internet codemirror use library code vizualiser SARD library complete overkilled blog Furthermore Codemirror supposed run browser shjs Not available npm bye bye rainbow Supported languages don match needs highlightjs Highlight looks great integrated Eleventy prism library browser torchlight pay highlighting shitty code shiki one looks great comparing highlightjs shiki decided choose shiki colors look great sharp inspired VScode themes test flexibility modularity Eleventy Let run Shiki first time see output looks HTML codeToHtml const shiki require shiki lang pre class shiki code span class line span style color 81A1C1 const span span style color D8DEE9FF span span style color D8DEE9 shiki span span style color D8DEE9FF span span style color 81A1C1 span span style color D8DEE9FF span span style color ECEFF4 span span style color A3BE8C shiki span span style color ECEFF4 span span code pre Not bad few problems Colors hardcoded meaning support different color themes especially dark theme HTML output verbose due style attribute token lot colors duplicated multiple times small number lines code not big deal when comes sharing big chunks code increases size HTML opinion better approach look HTML classes prefixed highlight every class unique codeToHtml const shiki require shiki lang pre class shiki code span class line span class const span span class span span class shiki span span class span span class span span class span span class span span class shiki span span class span span code pre following CSS rules will embedded CSS file caching concerns style shiki 81a1c1 d8dee9ff media prefers color scheme dark shiki 0550ae a5d6ff color var color var style lot benefits want change theme one day just need update CSS files define themes want defining extra CSS variables HTML cleaner default output Enhancing shiki output special theme css variables uses CSS variables instead hardcoded values Using theme allow support dark theme testing feature turns result not great choosing normal theme github light going bake homemade code Shiki API designed exposes functions codeToHtml returns HTML output string code codeToThemedTokens returns intermediate representation highlighted code going use codeToThemedTokens control HTML rendering function returns object type IThemedToken first dimension lines second dimension different tokens nothing fancy highlight main module function highlight will used Eleventy generate theme program run once generate CSS rules theme mapping json theme mapping json maps HTML class color theme github light json highlight import encode html entities import Highlighter IThemedToken shiki eslint disable next line typescript eslint var requires unicorn prefer module const mapping require theme mapping json class Highlight constructor private readonly Highlighter Highlight code colors param string code param string language returns string HTML content highlight code string language string string eslint disable next line typescript eslint non null assertion const tokens codeToThemedTokens code language return renderToHTML tokens Build HTML output tokens https github com shikijs shiki blob main packages shiki src renderer L24 param tokens tokens shiki library see codeToThemedTokens returns string HTML content renderToHTML tokens IThemedToken string eslint disable next line typescript eslint non null assertion const theme getTheme let html const line tokens html span const token line const className token color mapping token color toUpperCase theme html generateSpanTag token className html span return html trimEnd generateSpanTag token IThemedToken className token content trim return span processToken token span return span class className processToken token span processToken token IThemedToken const HTTP_URL https 256 const token content match HTTP_URL return token content replaceAll href encode return encode token content export Highlight generate theme import promises node import path node path import loadTheme shiki interface Colors light string dark string https github com shikijs shiki tree main packages shiki themes const DEFAULT_THEME github function generateClass index return String index padStart function generateCSS colors Array Colors let cssOutput const variables colors map colors index generateClass index colors light const darkVariables colors map colors index generateClass index colors dark let index index colors length index const paddedIndex generateClass index cssOutput cssOutput paddedIndex color var paddedIndex return code block inner variables join dark code block inner darkVariables join cssOutput function generateMappingFile colors Array Colors const mapping new Map string string const index color colors entries mapping set color light toUpperCase generateClass index eslint disable next line unicorn prefer module return writeFile path join __dirname theme mapping json JSON stringify Object fromEntries mapping undefined async function main themeName string const colors new Map string string const theme await loadTheme themes themeName light json settings const darkTheme await loadTheme themes themeName dark json settings const index theme const key theme index settings foreground undefined key colors key darkTheme index settings foreground console error Color key already used theme index scope continue eslint disable next line typescript eslint non null assertion colors set key darkTheme index settings foreground const sortedColors colors map light dark light dark sort return light localeCompare dark await generateMappingFile sortedColors console log generateCSS sortedColors node_modules bin node modules eleventy generate theme eslint disable next line unicorn prefer top level await main process argv DEFAULT_THEME catch console error theme mapping json 032F62 h00 22863A h01 6F42C1 h02 005CC5 h03 6A737D h04 F6F8FA h05 586069 h06 B31D28 h07 E36209 h08 D73A49 h09 24292E h10 FAFBFC h11 output html span span class h11 const span span span span class h03 shiki span span span span class h11 span span span span class h05 require span span class h08 span span class h01 shiki span span class h08 span span"
  },{
    "url" : "/articles/first-time-arch-linux/",
    "title" : "My Arch Linux install",
    "type" : "article",
    "description" : "Just some voodoo bash scripts to install Arch Linux from scratch.",
    "text" : "article guide myself spent hours writing bash scripts install Arch Linux machine scratch room improvement right happy setup Getting started Create Arch Linux Installer USB drive bash Download ISO curl https geo mirror pkgbuild com iso latest archlinux x86_64 iso Format copy iso thumb drive wipefs dev sdx archlinux x86_64 iso dev sdx reboot Once Arch Linux booted bash Boot Arch Linux live USB run command mkdir scripts scripts export SSID ssid export WIFI_PASSPHRASE wifi passphrase iwctl station wlan0 connect SSID passphrase WIFI_PASSPHRASE curl https mcdostone github install arch linux bash Configure environment variables cat env install Arch Linux bash init init entrypoint script chroot Script executed when arch chroot startup script run reboot once Arch Linux installed Partitionning use ext4 file system Maybe better solutions days allocate 1GB boot partition test custom linux kernels dev sda11GBBoot dev sda24GBSwap dev sda3114GBRoot Terminal Shell preference fish Shell autosuggestion feature reason chose use Gnome terminal use fish install themes colors palette Agnoster theme use Pro Display Mono fonts Desktop environment use Gnome bunch extensions theme Colloid gtk icons pack WhiteSur icon Extension Description user theme gnome shell extensions gcampax github com GNOME just perfection desktop just perfection Add blur GNOME shell search light icedman github com apps search overview rounded window corners yilozt Add rounded corners windows nightthemeswitcher romainvigier Toggle light dark theme automatically blur shell aunetx Add blur GNOME shell dash dock micxgx gmail com dock Gnome Shell noannoyance daase net Remove Window ready notification remove alt tab delay daase net Remove second popup delay switcher pop ups windowIsReady_Remover nunofarruca gmail com Removes window ready Notification Applications applications below installed flatpak Screenshots Next step compile Linux Kernel configuration dedicated laptop"
  },{
    "url" : "/articles/why-yozefu/",
    "title" : "Why Yōzefu?",
    "type" : "article",
    "description" : "A terminal user interface for searching for data in Apache Kafka.",
    "text" : "last months working Yozefu terminal user interface search data Kafka cluster article explain why chosen terminal user interface built Yozefu Opinions own not views employer MAIF Yozefu interactive terminal user interface TUI application exploring data kafka cluster Star Yozefu action Introduction Apache Kafka familiar Apache Kafka feel free move next section Apache Kafka distributed event store platform written Java Software connect Kafka cluster read write call records record data envelope composed different attributes key optional array bytes value optional array bytes set headers timestamp record milliseconds epoch records readable computers usually specify format key value example decide key will version UUID value json payload bashkey 15AE6B8A C63A 4E5A B306 C32F88167CD6 value item Fajitas quantity pickup true timestamp 1736097744249 headers parent trace 75210a19 cff8 4f1a b3f8 0a375eb3cb96 environment development position 1541399 1716597 Records deposited letter box called topic topic identified unique name Usually topic contains specific type record instance work restaurant define topics restaurant orders containing records related customer orders restaurant ingredients stocks remaining stocks ingredients types actors Apache Kafka producer publishes record topic consumer consumes records multiple topics Producers consumers written different programming languages Unlike message queue systems RabbitMQ published record stays topic certain period time words consuming record doesn remove topic classic producer consumer workflow want delete record either wait record expired empty topics therefore records Apache Kafka enough information understand following parts want learn technology recommend Confluent youtube playlist problem Today Monday hate incident response team member day team salut charge synchronizing data coming different sources Elasticsearch cluster develop maintain applications transform aggregate data One constraints pipeline propagate fresh data Elasticsearch fast possible second team decided develop Extract Transform Load ETL data pipeline pipeline relies lot Apache Kafka Java current pipeline kafka topics one step ETL process extract data extracted source transform data transformed enriched load data loaded Elasticsearch Today receiving incidents related elasticsearch documents seem updated late Data second propagated Elasticsearch creates latency process huge amount data time applications suffering temporary outage Kafka network having trouble databases slow notify Elasticsearch pressure imagine causes explain latency pipeline will Monday next days even complicated databases Elasticsearch Kafka network not responsibility means restricted scope diagnose latency pointing finger colleagues thought interesting measure long takes synchronise data especially data identified slow rolled sleeves every data latency looked topics sure kafka records published soon possible next topics ETL pipeline topics Observability one solutions diagnose latency Unfortunately applications not openTelemetry ready yet Tooling Apache Kafka diagnose latency need read timestamp kafka records plenty tools read data going kafka cluster known tools AKHQ built Micronaut React tool use MAIF KafDrop open source Spring boot application Redpanda console web application written Golang React Conduktor Console web application advanced search features requires PostgreSQL kafka plugin JetBrains IDEs written Java testing tools trying find right shoe foot tools great work user experience okay use tool once day However use tools multiple times day user experience decreases strongly use tools specific usage context show limitations search topic means topics want search need open browser tabs select topic run new search running SQL query without able join tables advanced architectures data travel multiple topics able search data multiple topics nice feature tools offer limited search features contains not contains equals usually operators use search kafka records probably enough use cases when need run precise queries operators limited will probably give results lot noise tools web based applications love web applications disappointed user experience just one thing number mouse interactions Using mouse own opinion disaster think running SQL query interactions execute opening console writing query hitting run key shortcut simple Sorry browser doesn support embedded videos Finding Malaurie born 1992 Yozefu AKHQ big fan CLIs years old thought interesting explore possibilities build terminal Terminal user interfaces Terminal User Interfaces TUI software designed run terminal TUIs everywhere good chance use every day vim tmux htop k9s bacon even midnight commander htop action TUIs bring visual dimension CLI software large palette characters offered Unicode few tablespoons colors borders tables emojis loading spinners become possible draw nice looking TUIs offer new interact software CLIs run command output run command lot back forth interactions TUIs start session stick long want Ratatui year ago across FOSDEM 2024 presentation named Introducing Ratatui Rust library cook terminal user interfaces time learning Rust thought nice give try library Ratatui allows build terminal user interfaces provides basic widgets compose draw user interface Combined clap crate getting easier build TUI application web development background past used fronted frameworks React lit dev felt natural choose component architecture pattern documentation written nice getting started quickly component Ratatui component similar web component terms API piece code renders characters given area terminal component button text input table panel modal etc Yozefu every component implement Component trait rustpub trait Component Register action handler receive actions application register_action_handler mut self UnboundedSender Action Result MyError identifier unique per component self ComponentName handle key events when user types keyboard handle_key_events mut self key KeyEvent Result Option Action MyError Update state component given action update mut self action Action Result Option Action MyError Draw component terminal similar render React draw mut self mut Frame rect Rect Result MyError component stateless stateful Once again similar React API back old days rustpub crate struct LinkToRepositoryComponent impl Component LinkToRepositoryComponent self ComponentName ComponentName Link draw mut self frame mut Frame rect Rect Result MyError let block Block default borders Borders border_type BorderType Rounded padding Padding symmetric style Style default let paragraph Paragraph new vec Line GitHub repository Line https github com MAIF yozefu bold frame render_widget paragraph inner block rect stateless component printing link Yozefu github repository Composition Once defined components compose build nice Yozefu multiple components main ones TopicsComponent Lists topics available Kafka cluster RecordsComponent Displays records selected topic RecordDetailsComponent Displays details particular kafka record key value partition offset schema FooterComponent Displays user notifications key shortcuts helpComponent Shows help page Components grouped view view component its goal render set components together finally responsible Storing global state application Managing components render based user interactions Dealing focus state navigation history Subscribing crossterm events dispatch visible components Show topics records Show records Show specific kafka record Show help page const select document querySelector select const graph document querySelector tui graph graph setAttribute class select value select addEventListener change event graph setAttribute class event target value Search engine mentioned previously improve search experience operators not fined grained enough meaning generate lot noise results takes time craft search query need deal select boxes text inputs date pickers not super convenient Sometimes obscure filters interpreted specify multiple search criteria combined operator Yozefu decided develop query language inspired SQL offers possibilities filter kafka records example query Yozefu sql beginning beginning partitions value status started Assume value json object headers trace parent 75210a19 cff8 4f1a b3f8 0a375eb3cb96 Filter value header partition records partition offset 345 Offset record greater 345 limit Return first records parsing done nom crate parser combinator library allows build parsers combining small parsers together fun use Once query parsed telling whether kafka record matches query straightforward terms created SearchComponent search component input field type query highlights syntax errors query incorrect thoughts Ratatui experience Ratatatui great lot fun developing Yozefu pros cons identified library generally TUIs Pros Ratatui comes lot built widgets developer just need compose build enhanced widgets library includes nice layout system structure organize don know intentional API stylizing components wording colors fonts borders close find web ecosystem feeling writing CSS code Ratatui use Rust backend frontend TUIs easy deploy distribute TUI just binary download TUIs excellent work remote servers containers Building TUI creative process limited display terminal need think new ways give feedback user refreshing experience Ratatui Rust library comes benefits Rust memory safety performance quality crates documentation good community active easy find answers questions general TUIs consume less hardware resources GUI based applications classic web applications Cons bit boilerplate code getting started frustrating beginning Fortunately use generator bootstrap project Rendering app terminal tricky Even though terminals popping last few years advanced features will limited won liberty web development few things implement myself components layers add depth navigation history implement breadcrumb not big deal something keep mind During development phase faced issues around operating systems specific keyboard modifiers Basically limit myself CTRL not count super MacOS alt Windows didn time optimize Yozefu Windows looks terrible rendering pretty bad TUI applications not fully accessible Ratatui supports mouse events didn use When enable feature select copy pasta text terminal Conclusion Yozefu boring tool features alternative tools believe offers better user experience control everything fingies need use mouse developed query language search records Kafka inspired SQL offers possibilities filter kafka records Yozefu nice feedback loop thanks Rust Ratatui terminal headless mode use tool shell scripts think query language missing features create search filter relies WebAssembly gives possibility extend query language user defined filtering functions cool features haven talk give try shell Download tool Start kafka cluster docker Publish records execute yozf cluster localhost curl https raw githubusercontent com MAIF yozefu refs heads main docs try bash MAIF Yozefu interactive terminal user interface TUI application exploring data kafka cluster Star"
  },{
    "url" : "/recipes/butternut-goat-cheese-lasagna/",
    "title" : "Lasagnes de butternut et fromage de chèvre",
    "type" : "recipe",
    "description" : "Lasagnes de butternut et fromage de chèvre",
    "text" : "Les ingredients Pour personnes Unchecked Metric Checked Imperial units Courge butternut Feuilles lasagnes Oignon Ail Concasse tomates 500500 Buche fromage chevre Fromage chevre frais 100100 Gruyere rape 100100 Huile olive Paprika Cumin moulu Beurre 5050 Farine 5050 Lait 7070 Sel Poivre recette Une photo est prevue lorsque aurai cuisine cette pepite Pelez egrainez courge butternut Coupez des disposez les sur une grille recouverte papier cuisson Parsemez paprika cumin puis enfournez 180 pendant minutes Pelez emincez oignon les gousses ails faites les revenir dans une poele chaude avec filet huile olive jusqu ils colorent Ajoutez concasse tomates laissez mijoter sur feux doux pondant minutes Incorporez chevre frais moitie buche coupee preparation puis ajoutez les des courge melangez Pour bechamel faites fondre beurre feu moyen dans une casserole puis ajoutez farine remuant rapidement Versez progressivemnt lait tout remuant jusqu que melange epaississe assaisonnez votre convenance Reservez Beurrez plat gratin puis montez vos lasagnes Etalez une fine couche bechamel puis recouvrez feuilles lasagne Versez moitie sauce courge puis une couche bechamel Recouvrez feuilles lasagne continuez amener finissant par des feuilles lasagnes recouvertes bechamel rondelles buche chevre gruyere rape Enfournez minutes 180 Servez chaud"
  },{
    "url" : "/recipes/vegetarian-savoury-cake/",
    "title" : "Cake salé végétarien",
    "type" : "recipe",
    "description" : "Cake salé végétarien aux poivrons, olives et féta",
    "text" : "Les ingredients Pour personnes Unchecked Metric Checked Imperial units Oeuf Farine 150150 Levure chimique Huile olive Lait 512 Gruyere rape 100100 Poivron rouge Feta 150150 Olives noires 5050 Poivre recette moule 28cm est necessaire Faites griller les poivrons poele four Coupez feta des ajoutez les olives coupees rondelles Reservez Dans saladier fouettez les oeufs farine levure poivre Incorporez petit petit lait huile legerement tiedi micro onde Ajoutez gruyere Melangez Incorporez ensuite melange poivrons feta olives pate remuez Transvasez tout dans moule beurre saupoudrez peu origan faites cuire pendant minutes"
  },{
    "url" : "/recipes/goat-cheese-squash-savoury-cake/",
    "title" : "Cake à la courgette et fromage de chèvre",
    "type" : "recipe",
    "description" : "Cake salé végétarien à la courgette et fromage de chévre",
    "text" : "Les ingredients Pour personnes Unchecked Metric Checked Imperial units Fromage chevre frais Gruyere rape 200200 Courgette Levure chimique Lait 1010 Oeuf Farine 100100 Sel Poivre recette Merci pote avoir partage cette recette delicieuse moule 28cm est necessaire Nettoyer couper courgette des Les cuire dans eau bouillante pendant minutes2 Dans saladier melanger les oeufs farine sel poivre levure chimique lait Ajouter dernier gruyere rape melanger Mettre courgette cuite dans une passoire refroidir avec eau froide essorer pour retirer maximum eau Ajouter preparation Couper moitie buche chevre des ajouter preparation Mettre papier sulfurise dans moule verser preparation Couper rondelles fromage chevre les mettre dans preparation Enfourner pendant minutes 210 degres"
  },{
    "url" : "/recipes/roasted-eggplant-pasta/",
    "title" : "Pâtes d&#39;aubergines grillées au parmesan",
    "type" : "recipe",
    "description" : "Cake salé végétarien aux poivrons, olives et féta",
    "text" : "Les ingredients Pour personnes Unchecked Metric Checked Imperial units Aubergine Huile olive 120120 Chapelure panko 5050 Parmesan 1515 Ail Tomate cerise 250250 Sauce Tomate Pate mezze maniche 500500 Sel Poivre recette Prechauffer four 220 Disposez les aubergines une couche uniforme sur une plaque patisserie deux vous avez assaisonnez les sel poivre arrosez les tasse huile olive Retourner les aubergines saler poivrer autre cote Faire rotir les aubergines pendant minutes les retournant cuisson jusqu elles soient bien dorees des deux cotes est pas difficile faire rotir des aubergines mais cuisson est irreguliere plus que pour tout autre legume peut etre fonction votre four aubergine elle meme votre definition pouce cuisson peut durer minutes fait rotir des aubergines 220 dans plusieurs fours differents une maniere une autre est jamais meme chose seul conseil que donner est les faire rotir jusqu elles soient tres tres dorees ajoutant huile vous pensez elles ont besoin cela les aidera brunir lieu les faire paraitre blanches deshydratees Une aubergine bien grillee est element plus important cette recette Pendant temps faire chauffer cuilleres soupe huile olive dans une grande poele une casserole peu profonde fond epais comme four hollandais feu moyen Ajouter chapelure assaisonner sel poivre Faire griller remuant temps temps jusqu que chapelure soit magnifiquement doree comme des petits morceaux individuels pain grille environ minutes Ajouter tasse fromage votre choix melanger pour enrober laissant fondre dans chapelure vous inquietez pas agglomere melanger encore une minute deux Retirer feu transferer dans petit bol Ajouter deux trois cuilleres soupe herbes hachees melanger reserver Essuyer marmite poele ajouter les cuilleres soupe huile olive restantes Ajouter ail cuire remuant temps temps jusqu soit ramolli bien grille minutes Ajouter les tomates concentre tomates les flocons piment rouge broyes cas echeant Assaisonner sel poivre cuire remuant temps temps jusqu que les tomates eclatent que pate tomates prenne une couleur rouge brique foncee minutes supplementaires Retirer feu attendre que les aubergines finissent rotir Une fois que aubergine est endroit voulu ajoutez dans poele remuant pour elle fonde dans les tomates Cela semblera peu sec debut mais sachez que vous allez ajouter une grande quantite eau pates qui vous donnera plus sauce Pendant temps portez ebullition une grande casserole eau salee Faites cuire les pates votre choix jusqu elles soient dente Conserver tasses eau cuisson des pates egoutter reste Ajoutez les pates tasse eau cuisson des pates dans votre casserole poele faites cuire feu moyen Continuez remuer jusqu que sauce passe aqueuse epaisse presque cremeuse cela produit rapidement minutes Chaque morceau pates doit etre magnifiquement enrobe parfaitement cuit Ajoutez eau necessaire salez poivrez fur mesure Repartir les pates dans des bols garnir chapelure herbes fromage pour servir"
  },{
    "url" : "/recipes/quesadillas-croustillantes-a-la-patate/",
    "title" : "Quesadillas croustillantes à la patate",
    "type" : "recipe",
    "description" : "Si",
    "text" : "Les ingredients Pour personnes Unchecked Metric Checked Imperial units Patate 500500 petit pois 270270 frometon 250250 Huile olive Tortillas ble Chou 250 Carotte Oignon rouge Jalapeno Citron vert Vinaigre cidre pomme Sucre Creme fraiche 2020 Sel Poivre Pour maximiser vos chances faire croustiller les quesadillas vous recommande decontracter les tortillas heure avant cuisson avec ces quelques notes innocentes recette Prechauffez four 200 Remplissez une casserole moyenne eau ajoutez cuilleres soupe sel portez ebullition feu vif Coupez les pommes terre morceaux environ ajoutez les dans casserole fur mesure Une fois eau bouillante reduisez legerement feu pour maintenir une ebullition constante faites cuire les pommes terre pendant minutes jusqu elles soient tendres fourchette Ajoutez les petits pois poursuivez cuisson pendant minutes Egouttez les legumes remettez les dans casserole ajoutez fromage ecrasez tout jusqu obtenir melange homogene Salez votre gout Versez huile sur une plaque cuisson etalez uniformement aide cote une tortilla ble puis repetez operation avec une autre tortilla jusqu que tortillas soient legerement huilees sur cote disposees maniere uniforme sur plaque elles peuvent chevaucher legerement Repartissez puree sur les tortillas Recouvrez chaque portion une deuxieme tortilla appuyez legerement jusqu que garniture arrive presque bord Retournez les quesadillas pour huiler autre cote Faites cuire four pendant minutes retournez les quesadillas puis poursuivez cuisson pendant minutes supplementaires jusqu elles soient dorees croustillantes Elles peuvent gonfler peu qui est parfait Pendant temps preparez garniture Melangez chou les carottes oignon rouge jalapeno jus citron vert vinaigre sucre cuillere cafe sel Melangez salade avec les mains ajustez vinaigre sel sucre selon votre gout Pour servir coupez les quesadillas quartiers avec couteau bien aiguise garnissez salade chou une cuilleree creme aigre vous souhaitez Avec petite sauce piquante esprit automne est encore meilleur voici resultat"
  },{
    "url" : "https://www.arte.tv/fr/videos/123293-000-A/manchester-by-the-sea/",
    "title" : "Manchester by the sea.",
    "type" : "movie",
    "description" : "https://www.arte.tv/fr/videos/123293-000-A/manchester-by-the-sea/",
    "text" : "https www arte videos 123293 000 manchester sea"
  }
  ,{
    "url" : "https://www.youtube.com/watch?v=ZSZtF9y2V8I",
    "title" : "My talk at DevoxxFR 2025: Ratatui, a TUI library for Rust.",
    "type" : "podcast",
    "description" : "https://www.youtube.com/watch?v=ZSZtF9y2V8I",
    "text" : "https www youtube com watch ZSZtF9y2V8I"
  }
  ,{
    "url" : "https://explain.dalibo.com/",
    "title" : " Visualizing and understanding PostgreSQL EXPLAIN plans made easy.",
    "type" : "tool",
    "description" : "https://explain.dalibo.com/",
    "text" : "https explain dalibo com"
  }
  ,{
    "url" : "https://mcdostone.github.io/slides/2025-04-17-devoxxfr-ratatui/",
    "title" : "Slides for my DevoxxFR 2025 talk about Ratatui.",
    "type" : "podcast",
    "description" : "https://mcdostone.github.io/slides/2025-04-17-devoxxfr-ratatui/",
    "text" : "https mcdostone github slides 2025 devoxxfr ratatui"
  }
  ,{
    "url" : "https://www.capvin.de",
    "title" : "A good pizza place in Berlin.",
    "type" : "restaurant",
    "description" : "https://www.capvin.de",
    "text" : "https www capvin"
  }
  ,{
    "url" : "https://marabos.nl/atomics",
    "title" : "Rust Atomics and Locks by Mara Bos.",
    "type" : "book",
    "description" : "https://marabos.nl/atomics",
    "text" : "https marabos atomics"
  }
  ,{
    "url" : "https://corrode.dev/podcast/s02e01-curl/",
    "title" : "curl - Daniel Stenberg. Rust in Production.",
    "type" : "podcast",
    "description" : "https://corrode.dev/podcast/s02e01-curl/",
    "text" : "https corrode dev podcast s02e01 curl"
  }
  ,{
    "url" : "https://www.mcorbin.fr/posts/2024-02-12-microservice/",
    "title" : "Réflexion sur les microservices: avantages, inconvénients, patterns, complexité accidentelle.",
    "type" : "article",
    "description" : "https://www.mcorbin.fr/posts/2024-02-12-microservice/",
    "text" : "https www mcorbin posts 2024 microservice"
  }
  ,{
    "url" : "https://www.youtube.com/watch?v=6pw_Wx7KpoU",
    "title" : "Letting Things Go | Vulfmon &amp; Evangeline. Fuck oui!",
    "type" : "video",
    "description" : "https://www.youtube.com/watch?v=6pw_Wx7KpoU",
    "text" : "https www youtube com watch 6pw_Wx7KpoU"
  }
  ,{
    "url" : "https://open.spotify.com/track/6nTTiI03SJDXC9252gWGrN?si=f58fb2c1470f489f",
    "title" : "I&#39;m my worst enemy.",
    "type" : "album",
    "description" : "https://open.spotify.com/track/6nTTiI03SJDXC9252gWGrN?si=f58fb2c1470f489f",
    "text" : "https open spotify com track 6nTTiI03SJDXC9252gWGrN f58fb2c1470f489f"
  }
  ,{
    "url" : "https://www.redblobgames.com/making-of/draggable/",
    "title" : "Drag-and-drop on the web.",
    "type" : "article",
    "description" : "https://www.redblobgames.com/making-of/draggable/",
    "text" : "https www redblobgames com making draggable"
  }
  ,{
    "url" : "https://www.radiofrance.fr/franceinter/podcasts/eclectik/jean-pierre-bacri-1531599",
    "title" : "A moment with Jean-Pierre Bacri.",
    "type" : "podcast",
    "description" : "https://www.radiofrance.fr/franceinter/podcasts/eclectik/jean-pierre-bacri-1531599",
    "text" : "https www radiofrance franceinter podcasts eclectik jean pierre bacri 1531599"
  }
  ,{
    "url" : "https://grahamhelton.com/blog/ssh-cheatsheet/",
    "title" : "An Excruciatingly Detailed Guide To SSH (But Only The Things I Actually Find Useful).",
    "type" : "blog",
    "description" : "https://grahamhelton.com/blog/ssh-cheatsheet/",
    "text" : "https grahamhelton com blog ssh cheatsheet"
  }
  ,{
    "url" : "https://jvns.ca/",
    "title" : "Julia Evans&#39;s blog, big fan of her programming zines.",
    "type" : "blog",
    "description" : "https://jvns.ca/",
    "text" : "https jvns"
  }
  ,{
    "url" : "https://bellard.org/",
    "title" : "Fabrice Bellard&#39;s Home Page.",
    "type" : "blog",
    "description" : "https://bellard.org/",
    "text" : "https bellard org"
  }
  ,{
    "url" : "https://cpu.land/",
    "title" : "How CPUs run programs?",
    "type" : "article",
    "description" : "https://cpu.land/",
    "text" : "https cpu land"
  }
  ,{
    "url" : "https://www.nan.fyi/svg-paths",
    "title" : "Understanding SVG Paths.",
    "type" : "article",
    "description" : "https://www.nan.fyi/svg-paths",
    "text" : "https www nan fyi svg paths"
  }
  ,{
    "url" : "https://www.youtube.com/watch?v=7ZBe1VFy0gc",
    "title" : "The Internet&#39;s Own Boy: The Story of Aaron Swartz.",
    "type" : "video",
    "description" : "https://www.youtube.com/watch?v=7ZBe1VFy0gc",
    "text" : "https www youtube com watch 7ZBe1VFy0gc"
  }
  ,{
    "url" : "https://open.spotify.com/album/59HnOYmSTW2CgNihmws5H4?si=8VsIRw4PQoaYOggMHyh9-g",
    "title" : "A cool concept album.",
    "type" : "album",
    "description" : "https://open.spotify.com/album/59HnOYmSTW2CgNihmws5H4?si=8VsIRw4PQoaYOggMHyh9-g",
    "text" : "https open spotify com album 59HnOYmSTW2CgNihmws5H4 8VsIRw4PQoaYOggMHyh9"
  }
  ,{
    "url" : "https://vectorizer.ai/",
    "title" : "Convert your JPEG and PNG bitmaps to SVG vectors quickly and easily.",
    "type" : "tool",
    "description" : "https://vectorizer.ai/",
    "text" : "https vectorizer"
  }
  ,{
    "url" : "https://emilkowal.ski/ui/dynamic-island",
    "title" : "Dynamic island made with CSS.",
    "type" : "article",
    "description" : "https://emilkowal.ski/ui/dynamic-island",
    "text" : "https emilkowal ski dynamic island"
  }
  ,{
    "url" : "https://samwho.dev/load-balancing/",
    "title" : "An article illustrating different load balancing strategies.",
    "type" : "article",
    "description" : "https://samwho.dev/load-balancing/",
    "text" : "https samwho dev load balancing"
  }
  ,{
    "url" : "https://clig.dev/",
    "title" : "Command Line Interface Guidelines.",
    "type" : "article",
    "description" : "https://clig.dev/",
    "text" : "https clig dev"
  }
  ,{
    "url" : "https://blog.clement.delafargue.name/posts/2015-05-20-why-auto-increment-is-a-terrible-idea.html",
    "title" : "Why auto increment is a terrible idea.",
    "type" : "article",
    "description" : "https://blog.clement.delafargue.name/posts/2015-05-20-why-auto-increment-is-a-terrible-idea.html",
    "text" : "https blog clement delafargue name posts 2015 why auto increment terrible idea html"
  }
  ,{
    "url" : "https://fffuel.co/",
    "title" : "A toolbox for frontend designers.",
    "type" : "tool",
    "description" : "https://fffuel.co/",
    "text" : "https fffuel"
  }
  ,{
    "url" : "https://www.youtube.com/watch?v=um9zUJfoxQs",
    "title" : "How semantic versioning can help you release software.",
    "type" : "video",
    "description" : "https://www.youtube.com/watch?v=um9zUJfoxQs",
    "text" : "https www youtube com watch um9zUJfoxQs"
  }
  ,{
    "url" : "https://12factor.net/",
    "title" : "A must-read guide for developers.",
    "type" : "article",
    "description" : "https://12factor.net/",
    "text" : "https 12factor net"
  }
  ]